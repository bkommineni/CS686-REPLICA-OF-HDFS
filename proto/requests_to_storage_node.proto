syntax = "proto3";
option java_package = "edu.usfca.cs.dfs";

message ReadinessCheckRequestToSNFromClient
{
    string filename = 1;
    int32 chunkId   = 2;
    message StorageNode
    {
        int32 port = 1;
        string hostname = 2;
    }

    repeated StorageNode storageNodeList = 3;
}

message ReadinessCheckRequestToSNFromSN
{
    string filename = 1;
    int32 chunkId   = 2;
    message StorageNode
    {
        int32 port = 1;
        string hostname = 2;
    }

    repeated StorageNode storageNodeList = 3;
}

message StoreChunkRequestToSNFromClient
{
    string filename = 1;
    int32 chunkId   = 2;
    bytes chunkData = 3;

    message StorageNode
    {
        int32 port = 1;
        string hostname = 2;
    }

    repeated StorageNode storageNodeList = 4;
}

message FreeSpaceInfoRequestToSN
{

}

message StoreChunkRequestToSNFromSN
{
    string filename = 1;
    int32 chunkId   = 2;
    bytes chunkData = 3;

    message StorageNode
    {
        int32 port = 1;
        string hostname = 2;
    }

    repeated StorageNode storageNodeList = 4;
}

message StoreChunkRequestToSN
{
    oneof msg
    {
        StoreChunkRequestToSNFromSN storeChunkRequestToSNFromSNMsg = 1;
        StoreChunkRequestToSNFromClient storeChunkRequestToSNFromClientMsg = 2;
    }
}

message ReadinessCheckRequestToSN
{
    oneof msg
    {
        ReadinessCheckRequestToSNFromSN readinessCheckRequestToSNFromSNMsg = 1;
        ReadinessCheckRequestToSNFromClient readinessCheckRequestToSNFromClientMsg = 2;
    }
}

message RetrieveFileRequestToSN
{
    string filename = 1;
    int32  chunkId  = 2;
}

message SendGoodChunkRequestToSN
{
    string filename = 1;
    int32  chunkId  = 2;
}

message SendGoodChunkRequestFromSNToSN
{
    string filename = 1;
    int32  chunkId  = 2;
    message storageNode
    {
        int32 port = 1;
        string hostname = 2;
    }
    storageNode SN = 3;
}

message SendReplicaCopyToSN
{
    string filename = 1;
    int32  chunkId  = 2;
    message storageNode
    {
        int32 port = 1;
        string hostname = 2;
    }
    storageNode SN = 3;
}

message SendReplicaCopyToSNFromSN
{
    string filename = 1;
    int32  chunkId  = 2;
    bytes chunkData = 3;
}

message RequestsToStorageNodeWrapper {
    oneof msg {
        ReadinessCheckRequestToSN readinessCheckRequestToSNMsg = 1;
        StoreChunkRequestToSN storeChunkRequestToSNMsg = 2;
        RetrieveFileRequestToSN retrieveFileRequestToSNMsg = 3;
        ReadinessCheckRequestToSNFromSN readinessCheckRequestToSNFromSNMsg = 4;
        SendGoodChunkRequestToSN sendGoodChunkRequestToSNMsg = 5;
        SendGoodChunkRequestFromSNToSN sendGoodChunkRequestFromSNToSNMsg = 6;
        SendReplicaCopyToSN sendReplicaCopyToSNMsg = 7;
        SendReplicaCopyToSNFromSN sendReplicaCopyToSNFromSNMsg = 8;
        FreeSpaceInfoRequestToSN freeSpaceInfoRequestToSNMsg = 9;
    }
}